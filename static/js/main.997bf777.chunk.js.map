{"version":3,"sources":["components/CropImage.js","EventImage.js","EventDisplay.js","Day.js","Season.style.js","Season.js","form/NumberInput.js","form/FertilizerRadio.js","utils/CropPlan.js","form/PlanDetails.js","form/useAmountState.js","form/CropSelect.js","CreateCropPlanForm.js","UpdateCropPlanForm.js","PlanEditor.js","components/Drawer.js","utils/planReducer.js","utils/useCropPlanReducer.js","Calendar.js","App.js","index.js"],"names":["CropImage","props","src","seed","concat","crop","id","react_default","a","createElement","alt","name","width","React","memo","_ref","plan","type","height","event","Fragment","components_CropImage","quantity","src_EventImage","StyledDay","styled","div","withConfig","displayName","componentId","selected","StyledDayTitle","StyledEvents","StyledEvent","day","actions","setDay","onClick","e","map","action","key","src_EventDisplay","BaseBlock","Style","Container","Title","Header","Block","header","Season_style","season","current_day","plans","body","useMemo","range","start","flatMap","getCropActionsOnDate","reduce","uniques","unique","get","set","Map","values","src_Day","Object","toConsumableArray","value","handleValue","_ref$isNullable","isNullable","_ref$max","max","Number","MAX_SAFE_INTEGER","attrs","objectWithoutProperties","assign","isInteger","onChange","number","parseInt","target","replace","isNaN","tag","handleChange","useCallback","fertilizers","fertilizer_radios","fertilizer","index","checked","htmlFor","CropPlan","_this","this","_ref$replant","replant","start_date","end_date","classCallCheck","shouldReplant","growth","isPlantDate","date","getCropGrowth","regrowth","isHarvestDate","getAction","isPlant","isHarvest","split","_ref2","objectSpread","undefined","debug","stringy","console","log","JSON","stringify","end","planA","planB","compare","Error","same","start_date_compare","crop_compare","localeCompare","fertilizer_compare","end_date_compare","handleSubmit","_useAmountState","price","reducer","state","Math","floor","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","updateQuantity","updated_quantity","updatePrice","updated_price","useAmountState","buy","_useAmountState2","setQuantity","setPrice","_useState","useState","_useState2","setFertilizer","_useState3","_useState4","setReplant","submit","preventDefault","toggleReplant","onSubmit","form_NumberInput","form_FertilizerRadio","crops","crop_options","findIndex","none","createPlan","filtered_crops","filter","setCrop","form_CropSelect","form_PlanDetails","updatePlan","deletePlan","updated_plan","remove","_templateObject","Box","_templateObject2","editable_plans","UpdateCropPlanForm","src_CreateCropPlanForm","StyledDrawer","StyledHandle","StyledContent","visible","container","document","onOpen","onClose","children","useEffect","appendChild","handleToggle","ReactDOM","createPortal","created_plan","same_plan","new_state","merge","sort","deleted_plan","equal","planReducer","new_plan","old_plan","useCropPlanReducer","initialState","arguments","length","seasons","Calendar","setSeason","_useCropPlanReducer","_useCropPlanReducer2","_useState5","_useState6","setVisible","open","close","handleSeasonClick","season_picker","capitalize","src_Season","components_Drawer","src_PlanEditor","App","Component","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.997bf777.chunk.js","sourcesContent":["import React from \"react\";\n\nconst CropImage = props => {\n  let src;\n  if (props.seed) src = `/images/seeds/${props.crop.id}.png`;\n  else src = `/images/crops/${props.crop.id}.png`;\n  return <img src={src} alt={props.crop.name} width={20} />;\n};\nexport default CropImage;\n","import React from \"react\";\n\nfunction EventImage({ plan, name }) {\n  let src;\n  if (plan.type === \"festival\") src = `%PUBLIC_URL%/images/events/festival.gif`;\n  else src = `%PUBLIC_URL%/images/events/${plan.id}.png`;\n  return <img src={src} alt={name} height={10} />;\n}\n\nexport default React.memo(EventImage);\n","import React from \"react\";\nimport CropImage from \"./components/CropImage\";\nimport EventImage from \"./EventImage\";\n\nconst EventDisplay = ({ event }) => {\n  if (\n    event.type === \"plant\" ||\n    event.type === \"replant\" ||\n    event.type === \"harvest\"\n  )\n    return (\n      <>\n        <CropImage crop={event.crop} seed={event.type === \"plant\"} />\n        <span>x{event.quantity}</span>\n      </>\n    );\n  else\n    return (\n      <>\n        <EventImage event={event} />\n        {event.name}\n      </>\n    );\n};\n\nexport default React.memo(EventDisplay);\n","import React from \"react\";\nimport styled from \"styled-components/macro\";\nimport EventDisplay from \"./EventDisplay\";\nlet StyledDay = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-flow: column nowrap;\n  border: ${props => (props.selected ? \"1px solid black\" : \"none\")};\n  background-color: ${props => (props.selected ? \"whitesmoke\" : \"none\")};\n`;\n\nconst StyledDayTitle = styled.div`\n  height: 35px;\n`;\n\nconst StyledEvents = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-flow: column wrap;\n  justify-content: start;\n  overflow: auto;\n`;\n\nconst StyledEvent = styled.div`\n  flex: 1;\n`;\n\nfunction Day({ day, selected, actions, setDay }) {\n  function handleClick(e) {\n    setDay(day);\n  }\n\n  return (\n    <StyledDay selected={selected} onClick={handleClick}>\n      <StyledDayTitle>{(day + 1) % 28}</StyledDayTitle>\n      <StyledEvents>\n        {actions.map(action => (\n          <StyledEvent key={action.id}>\n            <EventDisplay event={action} />\n          </StyledEvent>\n        ))}\n      </StyledEvents>\n    </StyledDay>\n  );\n}\n\nexport default React.memo(Day);\n","import styled from \"styled-components/macro\";\n\nconst BaseBlock = styled.div`\n  flex: 1 1 13%;\n  border: 1px solid whitesmoke;\n`;\n\nconst Style = {\n  Container: styled.div`\n    display: flex;\n    flex-flow: row wrap;\n    width: 100%;\n  `,\n  Title: styled.div`\n    width: 100%;\n    text-align: center;\n    font-size: 2em;\n  `,\n  Header: styled(BaseBlock)`\n    text-align: center;\n    font-size: 1.2em;\n  `,\n  Block: styled(BaseBlock)`\n    height: 15vh;\n  `\n};\n\nexport default Style;\n","import React, { useMemo } from \"react\";\nimport range from \"lodash/range\";\nimport Day from \"./Day\";\nimport Style from \"./Season.style\";\n\nconst day_names = [\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n  \"Sunday\"\n];\n\nconst header = day_names.map(day => (\n  <Style.Header key={day}>{day}</Style.Header>\n));\n\nfunction Season({ season, day: current_day, plans, setDay }) {\n  const body = useMemo(\n    () =>\n      range(season.start, season.start + 28).map(day => {\n        const actions = plans\n          .flatMap(plan => plan.getCropActionsOnDate(day))\n          .reduce((uniques, action) => {\n            const unique = uniques.get(action.id);\n            if (unique) {\n              unique.quantity += action.quantity;\n            } else {\n              uniques.set(action.id, action);\n            }\n            return uniques;\n          }, new Map())\n          .values();\n\n        return (\n          <Style.Block key={day}>\n            <Day\n              key={day}\n              day={day}\n              selected={day === current_day}\n              actions={[...actions]}\n              setDay={setDay}\n            />\n          </Style.Block>\n        );\n      }),\n    [season, current_day, plans]\n  );\n\n  return (\n    <Style.Container>\n      <Style.Title>{season.name}</Style.Title>\n      {header}\n      {body}\n    </Style.Container>\n  );\n}\n\nexport default React.memo(Season);\n","import React from \"react\";\n\n// A Input for positive numbers that can be null\n// Useful for inputs with a placeholder\nfunction NumberInput({\n  value,\n  handleValue,\n  isNullable = true,\n  max = Number.MAX_SAFE_INTEGER,\n  ...attrs\n}) {\n  function handleChange(e) {\n    const number = Number.parseInt(e.target.value.replace(/\\D/, \"\"), 10);\n\n    if (Number.isNaN(number)) {\n      handleValue(isNullable ? null : 0);\n    } else {\n      handleValue(number < max ? number : max);\n    }\n  }\n\n  return (\n    <input\n      type=\"text\"\n      value={Number.isInteger(value) ? value : \"\"}\n      onChange={handleChange}\n      {...attrs}\n    />\n  );\n}\n\nexport default React.memo(NumberInput);\n","import React, { useCallback } from \"react\";\nimport fertilizers from \"../data/fertilizers\";\n\nfunction FertilizerRadio({ value, handleValue, tag }) {\n  const handleChange = useCallback(\n    e => handleValue(fertilizers[e.target.value]),\n    []\n  );\n\n  const fertilizer_radios = fertilizers.map((fertilizer, index) => (\n    <React.Fragment key={fertilizer.id}>\n      <input\n        type=\"radio\"\n        id={fertilizer.id + \"-\" + tag}\n        name={\"fertilizer-\" + tag}\n        value={index}\n        checked={fertilizer === value}\n        onChange={handleChange}\n      />\n      <label htmlFor={fertilizer.id + \"-\" + tag}>{fertilizer.name}</label>\n    </React.Fragment>\n  ));\n\n  return <>{fertilizer_radios}</>;\n}\n\nexport default React.memo(FertilizerRadio);\nexport const none = fertilizers[0];\n","export default class CropPlan {\n  constructor({\n    crop,\n    fertilizer,\n    quantity,\n    replant = false,\n    start_date,\n    end_date\n  }) {\n    Object.assign(this, {\n      crop,\n      fertilizer,\n      quantity,\n      start_date: start_date,\n      end_date:\n        replant || crop.regrowth\n          ? crop.end\n          : replant === false\n            ? start_date + CropPlan.getCropGrowth(crop, fertilizer)\n            : end_date\n    });\n  }\n\n  static getCropGrowth(crop, fertilizer) {\n    return crop.growth;\n  }\n\n  static merge(planA, planB) {\n    if (CropPlan.compare(planA, planB))\n      throw new Error(\n        \"Plans must have equal dates, crop, and fertilizer to merge\"\n      );\n    const { quantity, ...same } = planA;\n    return new CropPlan({ quantity: quantity + planB.quantity, ...same });\n  }\n\n  // Compares data that cannot be merged - i.e. dates, crop, and fertilizer\n  static compare(planA, planB) {\n    const start_date_compare = planA.start_date - planB.start_date;\n    const crop_compare = planA.crop.id.localeCompare(planB.crop.id);\n    const fertilizer_compare = planA.fertilizer.id.localeCompare(\n      planB.fertilizer.id\n    );\n    const end_date_compare = planA.end_date - planB.end_date;\n\n    if (start_date_compare > 0) return 1;\n    else if (start_date_compare < 0) return -1;\n    else if (crop_compare > 0) return 1;\n    else if (crop_compare < 0) return -1;\n    else if (fertilizer_compare > 0) return 1;\n    else if (fertilizer_compare < 0) return -1;\n    else if (end_date_compare > 0) return 1;\n    else if (end_date_compare < 0) return -1;\n    else return 0;\n  }\n\n  static equal(planA, planB) {\n    const isSame = CropPlan.compare(planA, planB) === 0;\n    return isSame && planA.quantity - planB.quantity === 0;\n  }\n\n  shouldReplant = () => {\n    return this.start_date + this.crop.growth !== this.end_date;\n  };\n\n  get id() {\n    return `${this.crop.id}-${this.fertilizer.id}-${this.quantity}-(${\n      this.start_date\n    }-${this.end_date})`;\n  }\n\n  isPlantDate = date => {\n    const growth = CropPlan.getCropGrowth(this.crop, this.fertilizer);\n    const inPlan = this.start_date <= date && date + growth <= this.end_date;\n\n    return (\n      inPlan &&\n      (this.crop.regrowth\n        ? date === this.start_date\n        : (date - this.start_date) % growth === 0)\n    );\n  };\n\n  isHarvestDate = date => {\n    const growth = CropPlan.getCropGrowth(this.crop, this.fertilizer);\n    const inPlan = this.start_date <= date - growth && date <= this.end_date;\n\n    return (\n      inPlan &&\n      (this.crop.regrowth\n        ? date === this.start_date + growth ||\n          (date - this.start_date - growth) % this.crop.regrowth === 0\n        : (date - this.start_date - growth) % growth === 0)\n    );\n  };\n\n  getAction = type => ({\n    id: `${type}-${this.crop.id}`,\n    type: type,\n    crop: this.crop,\n    quantity: this.quantity\n  });\n\n  getCropActionsOnDate = date => {\n    const isPlant = this.isPlantDate(date);\n    const isHarvest = this.isHarvestDate(date);\n    if (isPlant && isHarvest)\n      return [this.getAction(\"plant\"), this.getAction(\"harvest\")];\n    else if (isPlant) return [this.getAction(\"plant\")];\n    else if (isHarvest) return [this.getAction(\"harvest\")];\n    else return [];\n  };\n\n  split = (date, { fertilizer, quantity, replant }) => {\n    const before = new CropPlan({ ...this, end_date: date });\n    const after = new CropPlan({\n      start_date: date,\n      fertilizer: fertilizer || this.fertilizer,\n      crop: this.crop,\n      quantity: quantity || this.quantity,\n      replant: replant === undefined ? this.shouldReplant() : replant\n    });\n    return [before, after];\n  };\n\n  debug = () => {\n    const stringy = { ...this };\n    stringy.fertilizer = this.fertilizer.id;\n    stringy.crop = this.crop.id;\n    console.log(JSON.stringify(stringy, null, 2));\n  };\n}\n","import React, { useState, useCallback } from \"react\";\nimport useAmountState from \"./useAmountState\";\nimport NumberInput from \"./NumberInput\";\nimport FertilizerRadio from \"./FertilizerRadio\";\nimport CropPlan from \"../utils/CropPlan\";\n\nfunction PlanDetails({ date, plan, handleSubmit }) {\n  const [quantity, price, setQuantity, setPrice] = useAmountState(\n    plan.quantity,\n    plan.crop.buy\n  );\n  const [fertilizer, setFertilizer] = useState(plan.fertilizer);\n  const [replant, setReplant] = useState(plan.shouldReplant());\n\n  const submit = useCallback(e => {\n    e.preventDefault();\n    handleSubmit(\n      new CropPlan({\n        crop: plan.crop,\n        quantity,\n        fertilizer,\n        replant,\n        start_date: date\n      })\n    );\n  });\n\n  const toggleReplant = useCallback(e => setReplant(!replant), [replant]);\n\n  return (\n    <form onSubmit={submit}>\n      <NumberInput value={quantity} handleValue={setQuantity} />\n      <NumberInput value={price} handleValue={setPrice} />\n      <FertilizerRadio\n        value={fertilizer}\n        handleValue={setFertilizer}\n        tag={plan.id}\n      />\n      {!plan.crop.regrowth && (\n        <input type=\"checkbox\" checked={replant} onChange={toggleReplant} />\n      )}\n      <button>Submit</button>\n    </form>\n  );\n}\n\nexport default React.memo(PlanDetails);\n","import { useReducer, useCallback } from \"react\";\n\nexport default function useAmountState(quantity, price) {\n  const reducer = useCallback(\n    (state, action) => {\n      switch (action.type) {\n        case \"price\":\n          return {\n            price: action.price,\n            quantity: Math.floor(action.price / price)\n          };\n        case \"quantity\":\n          return { price: price * action.quantity, quantity: action.quantity };\n        default:\n          return state;\n      }\n    },\n    [price]\n  );\n\n  const [state, dispatch] = useReducer(reducer, {\n    quantity,\n    price: quantity * price\n  });\n\n  const updateQuantity = useCallback(updated_quantity =>\n    dispatch({ type: \"quantity\", quantity: updated_quantity })\n  );\n\n  const updatePrice = useCallback(updated_price =>\n    dispatch({ type: \"price\", price: updated_price })\n  );\n\n  return [state.quantity, state.price, updateQuantity, updatePrice];\n}\n","import React from \"react\";\n\nfunction CropSelect({ value, handleValue, crops }) {\n  const handleCropChange = e => {\n    handleValue(crops[e.target.value]);\n  };\n\n  const crop_options = crops.map((crop, index) => (\n    <option key={crop.id} value={index}>\n      {crop.name}\n    </option>\n  ));\n\n  const index = crops.findIndex(crop => crop === value);\n\n  return (\n    <select onChange={handleCropChange} value={index}>\n      <option key={-1} value={-1}>\n        Select a Crop\n      </option>\n      {crop_options}\n    </select>\n  );\n}\n\nexport default React.memo(CropSelect);\n","import React, { useState, useMemo } from \"react\";\nimport crops from \"./data/crops\";\nimport PlanDetails from \"./form/PlanDetails\";\nimport CropSelect from \"./form/CropSelect\";\nimport fertilizers from \"./data/fertilizers\";\n\nconst none = fertilizers[0];\nfunction CreateCropPlanForm({ date, createPlan }) {\n  const filtered_crops = useMemo(\n    () =>\n      crops.filter(\n        crop => date >= crop.start && date + crop.growth <= crop.end\n      ),\n    [date]\n  );\n\n  const [crop, setCrop] = useState(null);\n  const plan = {\n    id: \"create\",\n    crop,\n    quantity: 1,\n    fertilizer: none,\n    shouldReplant: () => false\n  };\n\n  return (\n    <>\n      <CropSelect value={crop} handleValue={setCrop} crops={filtered_crops} />\n      {crop && (\n        <PlanDetails\n          key={crop.id}\n          date={date}\n          plan={plan}\n          handleSubmit={createPlan}\n        />\n      )}\n    </>\n  );\n}\n\nexport default React.memo(CreateCropPlanForm);\n","import React, { useCallback } from \"react\";\nimport PlanDetails from \"./form/PlanDetails\";\n\nfunction UpdatePlanForm({ date, plan, updatePlan, deletePlan }) {\n  const submit = useCallback(updated_plan => updatePlan(plan, updated_plan), [\n    plan\n  ]);\n\n  const remove = useCallback(() => deletePlan(plan), [plan]);\n\n  return (\n    <>\n      {plan.crop.name}\n      <PlanDetails date={date} plan={plan} handleSubmit={submit} />\n      <button onClick={remove}>Remove</button>\n    </>\n  );\n}\n\nexport default React.memo(UpdatePlanForm);\n","import React, { useMemo } from \"react\";\nimport CreateCropPlanForm from \"./CreateCropPlanForm\";\nimport UpdateCropPlanForm from \"./UpdateCropPlanForm\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n`;\n\nconst Box = styled.div`\n  flex: 1;\n`;\n\nfunction PlanEditor({ date, plans, createPlan, updatePlan, deletePlan }) {\n  const editable_plans = useMemo(\n    () =>\n      plans\n        .filter(plan => plan.isPlantDate(date))\n        .map(plan => (\n          <Box key={plan.id}>\n            <UpdateCropPlanForm\n              date={date}\n              plan={plan}\n              updatePlan={updatePlan}\n              deletePlan={deletePlan}\n            />\n          </Box>\n        )),\n    [date, plans]\n  );\n\n  return (\n    <Container>\n      <Box>\n        <CreateCropPlanForm date={date} createPlan={createPlan} />\n      </Box>\n      {editable_plans}\n    </Container>\n  );\n}\n\nexport default React.memo(PlanEditor);\n","import React, { useEffect, useCallback } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components/macro\";\n\nconst StyledDrawer = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100vw;\n  display: flex;\n  flex-flow: column nowrap;\n`;\nconst StyledHandle = styled.div`\n  align-self: center;\n  background-color: WhiteSmoke;\n`;\n\nconst StyledContent = styled.div`\n  display: ${props => (props.visible ? \"flex\" : \"none\")};\n  flex: 1;\n  padding: 5vh;\n  background-color: WhiteSmoke;\n`;\n\nconst container = document.createElement(\"div\");\nfunction Drawer({ visible, onOpen, onClose, children }) {\n  useEffect(() => {\n    document.body.appendChild(container);\n  }, []);\n\n  const handleToggle = useCallback(() => {\n    if (visible) onClose();\n    else onOpen();\n  });\n\n  return ReactDOM.createPortal(\n    <StyledDrawer>\n      <StyledHandle onClick={handleToggle}> handle</StyledHandle>\n      <StyledContent visible={visible}>{children}</StyledContent>\n    </StyledDrawer>,\n    container\n  );\n}\n\nexport default React.memo(Drawer);\n","import CropPlan from \"./CropPlan.js\";\n\nfunction planReducer(state, action) {\n  switch (action.type) {\n    case \"create\":\n      return createPlan(action.plan, state);\n    case \"update\":\n      return createPlan(action.new_plan, deletePlan(action.old_plan, state));\n    case \"delete\":\n      return deletePlan(action.plan, state);\n    default:\n      return state;\n  }\n}\n\nfunction createPlan(created_plan, state) {\n  const index = state.findIndex(\n    plan => CropPlan.compare(plan, created_plan) === 0\n  );\n\n  if (index >= 0) {\n    const same_plan = state[index];\n    const plans = state.filter(\n      plan => CropPlan.compare(plan, created_plan) !== 0\n    );\n    const merged_crop = CropPlan.merge(same_plan, created_plan);\n    const new_state = [merged_crop, ...plans];\n    new_state.sort(CropPlan.compare);\n    return new_state;\n  }\n\n  const new_state = [created_plan, ...state];\n  new_state.sort(CropPlan.compare);\n  return new_state;\n}\n\nfunction deletePlan(deleted_plan, state) {\n  return state.filter(plan => !CropPlan.equal(plan, deleted_plan));\n}\n\nexport default planReducer;\n","import { useReducer } from \"react\";\nimport planReducer from \"./planReducer\";\n\nfunction useCropPlanReducer(initialState = []) {\n  const [state, dispatch] = useReducer(planReducer, initialState);\n  const createPlanAction = plan => dispatch({ type: \"create\", plan });\n  const updatePlanAction = (old_plan, new_plan) =>\n    dispatch({ type: \"update\", old_plan, new_plan });\n  const deletePlanAction = plan => dispatch({ type: \"delete\", plan });\n  return [state, createPlanAction, updatePlanAction, deletePlanAction];\n}\n\nexport default useCropPlanReducer;\n","import React, { useState, useCallback } from \"react\";\nimport Season from \"./Season\";\nimport PlanEditor from \"./PlanEditor\";\nimport Drawer from \"./components/Drawer\";\nimport useCropPlanReducer from \"./utils/useCropPlanReducer\";\nimport capitalize from \"lodash/capitalize\";\n\nconst seasons = [\n  { name: \"spring\", start: 0 },\n  { name: \"summer\", start: 28 },\n  { name: \"fall\", start: 56 },\n  { name: \"winter\", start: 84 }\n];\n\nexport default function Calendar() {\n  const [season, setSeason] = useState(0);\n  if (false) useState(0);\n\n  const [day, setDay] = useState(0);\n  const [plans, createPlan, updatePlan, deletePlan] = useCropPlanReducer([]);\n  const [visible, setVisible] = useState(true);\n  const open = useCallback(() => setVisible(true), []);\n  const close = useCallback(() => setVisible(false), []);\n\n  function handleSeasonClick(e) {\n    setDay(e.target.value * 28);\n    setSeason(e.target.value);\n  }\n\n  const season_picker = seasons.map((season, index) => (\n    <button key={season.name} onClick={handleSeasonClick} value={index}>\n      {capitalize(season.name)}\n    </button>\n  ));\n\n  return (\n    <>\n      {season_picker}\n      <Season\n        season={seasons[season]}\n        day={day}\n        plans={plans}\n        setDay={setDay}\n      />\n      <Drawer visible={visible} onOpen={open} onClose={close}>\n        <PlanEditor\n          key={day}\n          date={day}\n          plans={plans}\n          createPlan={createPlan}\n          updatePlan={updatePlan}\n          deletePlan={deletePlan}\n        />\n      </Drawer>\n    </>\n  );\n}\n","import React from \"react\";\nimport Calendar from \"./Calendar\";\n\nclass App extends React.Component {\n  componentWillMount() {\n    console.log(\"bad\");\n  }\n  render() {\n    return <Calendar />;\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.createRoot(document.getElementById(\"root\")).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}